{"version":3,"sources":["components/Profile/NarrowColumn/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/WideColumn/WideColumn.module.css","components/Profile/WideColumn/MyPosts/MyPosts.module.css","components/Profile/WideColumn/MyPosts/Post/Post.module.css","components/Profile/NarrowColumn/NarrowColumn.module.css","assets/images/pavel-durov.jpg","components/Profile/NarrowColumn/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/WideColumn/MyPosts/Post/Post.jsx","components/Profile/WideColumn/MyPosts/MyPosts.jsx","components/Profile/WideColumn/MyPosts/MyPostsContainer.jsx","components/Profile/WideColumn/WideColumn.jsx","components/Profile/NarrowColumn/ProfileInfo/ProfileInfo.jsx","components/Profile/NarrowColumn/NarrowColumn.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","styles","pageStatus","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","Post","object","item","message","likesCount","maxLength10","maxLengthCreator","PostMessageTextAreaFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","cols","rows","placeholder","validate","required","component","Textarea","MyPosts","postsElements","posts","map","p","key","id","postsBlock","addPost","newPostElement","postsHeader","wallPosts","MyPostsContainer","connect","state","profileReducer","newPostText","dispatch","text","addPostActionCreator","WideColumn","wrapper","infoBlock","pageName","profile","fullName","ProfileInfo","descriptionBlock","width","height","src","photos","large","PavelDurov","alt","NarrowColumn","Profile","profile_content","Preloader","ProfileContainer","userId","this","match","params","authorizedUserID","history","push","getUserProfile","getStatus","React","Component","compose","authReducer","isAuth","withRouter"],"mappings":"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","file":"static/js/3.30319882.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1lBKX\",\"pageStatus\":\"ProfileInfo_pageStatus__1ObSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_content\":\"Profile_profile_content__1NdEi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"WideColumn_wrapper__rsFNK\",\"infoBlock\":\"WideColumn_infoBlock__muins\",\"pageName\":\"WideColumn_pageName__d61lS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2-_Vk\",\"posts\":\"MyPosts_posts__1xhhY\",\"postsHeader\":\"MyPosts_postsHeader__LknIj\",\"wallPosts\":\"MyPosts_wallPosts__1Z9C-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__jA5FH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NarrowColumn_wrapper__2Ekkw\"};","module.exports = __webpack_public_path__ + \"static/media/pavel-durov.7e094df1.jpg\";","import React, {useState, useEffect} from 'react';\r\nimport styles from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    // hook - используется state и возможность его изменения внутри ф-ции ProfileStatusWithHooks\r\n    // useState - возращает массив, в кот. первый элемент заданное значение, а 2-ой ф-ция кот. меняет его\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        // отправляем на значение на сервер когда вышли из редактируемого мода\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pageStatus}>\r\n            {/*true && 1 - покажет 1*/}\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || ''}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                {/*onBlur, когда фокус уходит с элемента*/}\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport object from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={`${object.item} page-block`}>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\n\r\nimport object from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\n// вынесено в отдельную переменную из-за ошибки зацикливания\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n    const postsElements =\r\n        props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    const addPostMessage = (value) => {\r\n        props.addPost(value.newPostElement);\r\n    }\r\n\r\n    return (\r\n        <div className={`${object.postsBlock}`}>\r\n            <div className='page-block'>\r\n                <PostMessageTextAreaFormRedux onSubmit={addPostMessage}/>\r\n            </div>\r\n            <div className={object.posts}>\r\n                <div className={`${object.postsHeader} page-block`}>\r\n                    <h3>My posts</h3>\r\n                </div>\r\n                <div className={object.wallPosts}>{postsElements}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst PostMessageTextArea = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <div>\r\n                    <Field\r\n                        name='newPostElement'\r\n                        cols=\"70\"\r\n                        rows=\"5\"\r\n                        placeholder='Enter your message'\r\n                        // в массиве название ф-ций валидаторов\r\n                        validate={[required, maxLength10]}\r\n                        // ссылка на компонент в др. файле\r\n                        component={Textarea}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst PostMessageTextAreaFormRedux = reduxForm({\r\n    form: 'postMessageTextArea'\r\n})(PostMessageTextArea);\r\n\r\nexport default MyPosts;\r\n\r\n","import {connect} from \"react-redux\";\r\n\r\nimport MyPosts from './MyPosts';\r\nimport {addPostActionCreator} from \"../../../../redux/actions/profile\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profileReducer.posts,\r\n        newPostText: state.profileReducer.newPostText,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addPost: (text) => dispatch(addPostActionCreator(text)),\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\n\r\nimport styles from './WideColumn.module.css';\r\nimport ProfileStatusWithHooks from \"../NarrowColumn/ProfileInfo/ProfileStatusWithHooks\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst WideColumn = (props) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={`${styles.infoBlock} page-block`}>\r\n                <h2 className={styles.pageName}>{props.profile ? props.profile.fullName : ''}</h2>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n            <MyPostsContainer/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WideColumn;\r\n","import React from 'react';\r\n\r\nimport object from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport PavelDurov from '../../../../assets/images/pavel-durov.jpg';\r\n\r\nconst ProfileInfo = (props) => {\r\n    // if (!props.profile) {\r\n    //     return <Preloader/>\r\n    // }\r\n\r\n    return (\r\n        <div className={object.descriptionBlock}>\r\n            <img width=\"300\" height=\"326\" src={!props.profile.photos.large ? PavelDurov : props.profile.photos.large}\r\n                 alt=\"Pavel Durov\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport styles from './NarrowColumn.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst NarrowColumn = (props) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NarrowColumn;\r\n","import React from 'react';\r\n\r\nimport styles from './Profile.module.css';\r\nimport WideColumn from \"./WideColumn/WideColumn\";\r\nimport NarrowColumn from \"./NarrowColumn/NarrowColumn\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.profile_content}>\r\n            <NarrowColumn {...props}/>\r\n            <WideColumn {...props}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/actions/profile\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n// прежде чем отрисовать jsx закидываем props, обрабатываем hoc-ами\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        // id из url (/profile/123 -> 123)\r\n        let userId = this.props.match.params.userId;\r\n        // если в url нет айди, берём id чела кот. вошёл через логин\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserID;\r\n\r\n            if(!userId) {\r\n                // если ни в url, ни за логинился нет id\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile\r\n            {...this.props}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profileReducer.profile,\r\n    status: state.profileReducer.status,\r\n    authorizedUserID: state.authReducer.userId,\r\n    isAuth: state.authReducer.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile, // thunk\r\n        getStatus,\r\n        updateStatus\r\n    }),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}