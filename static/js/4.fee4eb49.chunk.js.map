{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","object","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","DialogsMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Textarea","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogItems","values","sendMessage","newMessageBody","compose","connect","dialogsReducer","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,4FCejKC,EAXI,SAACC,GAChB,IAAMC,EAAI,mBAAeD,EAAME,IAE/B,OACI,yBAAKC,UAAS,UAAKC,IAAOC,OAAZ,YAAsBD,IAAOE,SAEvC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCHvBC,EAJC,SAACT,GACb,OAAO,yBAAKG,UAAWC,IAAOM,SAAUV,EAAMU,U,kCCA5CC,EAAcC,YAAiB,IAmBtBC,EAJYC,YAAU,CACjCC,KAAM,wBADiBD,CAbJ,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOV,KAAK,iBAAiBW,YAAY,sBAAsBC,SAAU,CAACC,IAAUV,GAAcW,UAAWC,OAEjH,6BACI,4CCgBDC,EAvBC,SAACxB,GACb,IAAMyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,IAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAE5B,GAAIA,GAAI4B,EAAE5B,GAAIM,KAAMsB,EAAEtB,SAClFwB,EAAmBP,EAAMQ,SAASJ,IAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASH,IAAKG,EAAEhC,GAAIQ,QAASwB,EAAExB,YAMhF,OACI,yBAAKP,UAAWC,IAAOwB,SACnB,yBAAKzB,UAAWC,IAAO+B,aAClBR,GAEL,yBAAKxB,UAAWC,IAAO6B,UACnB,6BAAMD,GACN,kBAAC,EAAD,CAAoBhB,SAXV,SAACoB,GACnBpC,EAAMqC,YAAYD,EAAOE,sB,wBCMlBC,sBACXC,YAboB,SAACf,GACrB,MAAO,CACHC,YAAaD,EAAMgB,iBAIA,SAAAC,GACvB,MAAO,CACHL,YAAa,SAACC,GAAD,OAAoBI,EAASC,YAAmBL,QAMjEM,IAFWL,CAGbf","file":"static/js/4.fee4eb49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2pThd\",\"dialogItems\":\"Dialogs_dialogItems__XGeOs\",\"active\":\"Dialogs_active__2M-PQ\",\"messages\":\"Dialogs_messages__3LscE\",\"message\":\"Dialogs_message__1mw-w\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport object from '../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    const path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <div className={`${object.dialog} ${object.active}`}>\r\n            {/*если не будет прописан Router, кот. отрисует компоненту, то ничего и не отрисуется*/}\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\n\r\nimport object from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={object.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newMessageBody' placeholder='Enter your message ' validate={[required, maxLength50]} component={Textarea}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsMessageForm = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm);\r\n\r\nexport default DialogsMessageForm;","import React from 'react';\r\n\r\nimport object from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogsMessageForm from \"./DialogsMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    const state = props.dialogsPage;\r\n\r\n    const dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>);\r\n    const messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={object.dialogs}>\r\n            <div className={object.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={object.messages}>\r\n                <div>{messagesElements}</div>\r\n                <DialogsMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {connect} from \"react-redux\";\r\n\r\nimport Dialogs from \"./Dialogs\";\r\nimport {sendMessageCreator} from \"../../redux/actions/dialogs\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n// как бы срабатывает обращение к store.getState() в state\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendMessage: (newMessageBody) => dispatch(sendMessageCreator(newMessageBody)),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect // hoc\r\n)(Dialogs);"],"sourceRoot":""}